package Classs;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Linea, Comillas, T_dato, string, Int, If, Else, Do, While, For, T_Dato,
    Igual, Suma, Resta, Multiplicacion, Division, Op_logico, Op_relacional,
    Op_atribucion, Op_incremento, Op_booleano, Parentesis_a, Parentesis_c,
    Llave_a, Llave_c, Corchete_a, Corchete_c, Main, P_coma, Identificador,
    Dos_puntos, Print, Punto, Public, Void, Asignacion, Numero, ERROR;
non terminal INICIO, SENTENCIASINTAXIF, SENTENCIAIFVALIDAR, STRING, INT, TIPODEDATO; 

start with INICIO;

INICIO ::= Int Main Parentesis_a Parentesis_c Llave_a Llave_c |
    Main Parentesis_a Parentesis_c Llave_a Llave_c;

SENTENCIASINTAXIF ::= Numero Op_logico Numero |
    Identificador Op_logico Identificador |
    Numero Op_relacional Numero |
    Numero Op_relacional Identificador;

STRING ::= Identificador Asignacion Comillas Identificador Comillas Punto |
    Identificador Asignacion Comillas Numero Comillas Punto;

INT ::= Identificador Asignacion Numero;

TIPODEDATO ::= Identificador Asignacion T_Dato;

SENTENCIAIFVALIDAR ::= Print Parentesis_a Comillas Identificador Comillas Punto |
    Print Parentesis_a Numero Parentesis_c Punto |
    Print Parentesis_a Comillas Numero Comillas Parentesis_c Punto;

IF ::= If SENTENCIASINTAXIF Dos_puntos Linea SENTENCIAIFVALIDAR Punto |
    If Parentesis_a SENTENCIASINTAXIF Parentesis_c Linea SENTENCIAIFVALIDAR Punto;